public List<Account> getAccounts(List<Account> accounts) {
    // code here
    if (accounts == null) return null;
    List<AccountWrapper> accList = new List<AccountWrapper>(); 
    for (Account acc : accounts){
        accList.add(new AccountWrapper(a));
    }
    accList.sort();
    accounts.clear(); 
    for(AccountWrapper a:accList){
        accounts.add(a.account);
    }
    return accounts; 
}
// write extra class here 
public class AccountWrapper implements Comparable{
    public Account account; 

    public AccountWrapper(Account acc){
        if (account == null){
            Exception ex = new NullPointerException;
            ex.setMessage('Account arguement cannot be null');
            throw ex; 
        }
        account = acc; 
    }

   public Integer compareTo(Object compareTo){
        AccountWrapper compareToAcc=(AccountWrapper) compareTo;

        Integer returnVal=0;

        if(account.AnnualRevenue ==null &&  compareToAcc.account.AnnualRevenue ==null){
            returnVal=0;
        } else if(account.AnnualRevenue ==null &&  compareToAcc.account.AnnualRevenue !=null){
            returnVal=-1;
        } else if(account.AnnualRevenue !=null &&  compareToAcc.account.AnnualRevenue ==null){
            returnVal=1;
        } else if (account.AnnualRevenue > compareToAcc.account.AnnualRevenue){
            returnVal=-1;
        } else if (account.AnnualRevenue < compareToAcc.account.AnnualRevenue){
            returnVal=1;
        }
        return returnVal;
    }

}

